"use client";

import { useState } from "react";
import { useAuthStore } from "@/lib/auth-store";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { useRouter } from "next/navigation";

export default function ImportExcel() {
  const { user, token } = useAuthStore();
  const router = useRouter();
  const [file, setFile] = useState<File | null>(null);
  const [uploading, setUploading] = useState(false);
  const [downloading, setDownloading] = useState(false);
  const [result, setResult] = useState<any>(null);

  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    if (e.target.files && e.target.files[0]) {
      setFile(e.target.files[0]);
      setResult(null);
    }
  };

  const handleUpload = async () => {
    if (!file || !token) {
      alert("Vui l√≤ng ch·ªçn file v√† ƒëƒÉng nh·∫≠p");
      return;
    }

    if (user?.role !== "admin") {
      alert("B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng t√≠nh nƒÉng n√†y");
      return;
    }

    const formData = new FormData();
    formData.append("file", file);

    try {
      setUploading(true);
      const response = await fetch("http://localhost:4002/api/import/salary", {
        method: "POST",
        headers: {
          Authorization: `Bearer ${token}`,
        },
        body: formData,
      });

      const data = await response.json();

      if (response.ok) {
        setResult({
          success: true,
          message: data.message,
          details: data.details || null,
        });
        setFile(null);
        // Reset file input
        const fileInput = document.getElementById(
          "fileInput"
        ) as HTMLInputElement;
        if (fileInput) fileInput.value = "";
      } else {
        setResult({
          success: false,
          message: data.message || "L·ªói t·∫£i file",
          error: data.error || null,
        });
      }
    } catch (error) {
      setResult({
        success: false,
        message: "L·ªói k·∫øt n·ªëi t·ªõi server",
        error: String(error),
      });
    } finally {
      setUploading(false);
    }
  };

  const handleDownloadTemplate = async () => {
    if (!token) {
      alert("Vui l√≤ng ƒëƒÉng nh·∫≠p");
      return;
    }

    if (user?.role !== "admin") {
      alert("B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng t√≠nh nƒÉng n√†y");
      return;
    }

    try {
      setDownloading(true);
      const response = await fetch("http://localhost:4002/api/import/template", {
        method: "GET",
        headers: {
          Authorization: `Bearer ${token}`,
        },
      });

      if (response.ok) {
        const blob = await response.blob();
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = 'mau-import-luong.xlsx';
        document.body.appendChild(a);
        a.click();
        window.URL.revokeObjectURL(url);
        document.body.removeChild(a);
      } else {
        alert("L·ªói t·∫£i file m·∫´u");
      }
    } catch (error) {
      alert("L·ªói k·∫øt n·ªëi t·ªõi server");
    } finally {
      setDownloading(false);
    }
  };

  return (
    <div className="min-h-screen bg-gray-50 p-6">
      {/* Header */}
      <div className="mb-6">
        <div className="flex items-center justify-between">
          <div>
            <h1 className="text-3xl font-bold">üìä Import Excel</h1>
            <p className="text-gray-600">
              T·∫£i l√™n file Excel ch·ª©a d·ªØ li·ªáu l∆∞∆°ng
            </p>
          </div>
          <Button variant="outline" onClick={() => router.push("/dashboard")}>
            ‚Üê Quay l·∫°i
          </Button>
        </div>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        {/* Upload Form */}
        <Card>
          <CardHeader>
            <CardTitle>T·∫£i l√™n file Excel</CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div>
              <label className="block text-sm font-medium mb-2">
                Ch·ªçn file Excel (.xlsx, .xls)
              </label>
              <input
                id="fileInput"
                type="file"
                accept=".xlsx,.xls"
                onChange={handleFileChange}
                className="block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100"
              />
            </div>

            {file && (
              <div className="p-3 bg-gray-50 rounded-md">
                <p className="text-sm">
                  <span className="font-medium">File ƒë√£ ch·ªçn:</span> {file.name}
                </p>
                <p className="text-xs text-gray-500">
                  K√≠ch th∆∞·ªõc: {(file.size / 1024).toFixed(2)} KB
                </p>
              </div>
            )}

            <div className="space-y-2">
              <Button
                onClick={handleUpload}
                disabled={!file || uploading}
                className="w-full"
              >
                {uploading ? "ƒêang t·∫£i l√™n..." : "T·∫£i l√™n"}
              </Button>

              <Button
                onClick={handleDownloadTemplate}
                disabled={downloading}
                variant="outline"
                className="w-full"
              >
                {downloading ? "ƒêang t·∫£i..." : "üì• T·∫£i file m·∫´u"}
              </Button>
            </div>

            {/* Result */}
            {result && (
              <div
                className={`p-4 rounded-md ${
                  result.success
                    ? "bg-green-50 border border-green-200"
                    : "bg-red-50 border border-red-200"
                }`}
              >
                <div
                  className={`font-medium ${
                    result.success ? "text-green-800" : "text-red-800"
                  }`}
                >
                  {result.success ? "‚úÖ Th√†nh c√¥ng" : "‚ùå Th·∫•t b·∫°i"}
                </div>
                <p
                  className={`text-sm mt-1 ${
                    result.success ? "text-green-700" : "text-red-700"
                  }`}
                >
                  {result.message}
                </p>
                {result.details && (
                  <div className="mt-2 text-sm text-green-700">
                    <p>Chi ti·∫øt:</p>
                    <ul className="list-disc list-inside mt-1">
                      <li>S·ªë d√≤ng ƒë√£ x·ª≠ l√Ω: {result.details.processed}</li>
                      <li>S·ªë d√≤ng th√†nh c√¥ng: {result.details.success}</li>
                      <li>S·ªë d√≤ng l·ªói: {result.details.errors}</li>
                    </ul>
                  </div>
                )}
                {result.error && (
                  <div className="mt-2 text-sm text-red-700">
                    <p>L·ªói: {result.error}</p>
                  </div>
                )}
              </div>
            )}
          </CardContent>
        </Card>

        {/* Instructions */}
        <Card>
          <CardHeader>
            <CardTitle>H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng</CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div>
              <h4 className="font-medium text-gray-900 mb-2">
                ƒê·ªãnh d·∫°ng file Excel:
              </h4>
              <ul className="text-sm text-gray-600 space-y-1 list-disc list-inside">
                <li>File ph·∫£i c√≥ ƒëu√¥i .xlsx ho·∫∑c .xls</li>
                <li>D·ªØ li·ªáu b·∫Øt ƒë·∫ßu t·ª´ d√≤ng 2 (d√≤ng 1 l√† ti√™u ƒë·ªÅ)</li>
                <li>C√°c c·ªôt b·∫Øt bu·ªôc theo th·ª© t·ª±:</li>
              </ul>
            </div>

            <div className="bg-gray-50 p-3 rounded-md">
              <table className="text-xs w-full">
                <thead>
                  <tr className="border-b">
                    <th className="text-left p-1">C·ªôt</th>
                    <th className="text-left p-1">T√™n tr∆∞·ªùng</th>
                    <th className="text-left p-1">Ki·ªÉu d·ªØ li·ªáu</th>
                  </tr>
                </thead>
                <tbody className="text-gray-600">
                  <tr>
                    <td className="p-1">A</td>
                    <td className="p-1">M√£ NV</td>
                    <td className="p-1">Text</td>
                  </tr>
                  <tr>
                    <td className="p-1">B</td>
                    <td className="p-1">H·ªç t√™n</td>
                    <td className="p-1">Text</td>
                  </tr>
                  <tr>
                    <td className="p-1">C</td>
                    <td className="p-1">L∆∞∆°ng CB</td>
                    <td className="p-1">Number</td>
                  </tr>
                  <tr>
                    <td className="p-1">D</td>
                    <td className="p-1">Ph·ª• c·∫•p</td>
                    <td className="p-1">Number</td>
                  </tr>
                  <tr>
                    <td className="p-1">E</td>
                    <td className="p-1">Thu·∫ø</td>
                    <td className="p-1">Number</td>
                  </tr>
                  <tr>
                    <td className="p-1">F</td>
                    <td className="p-1">Th·ª±c lƒ©nh</td>
                    <td className="p-1">Number</td>
                  </tr>
                </tbody>
              </table>
            </div>

            <div>
              <h4 className="font-medium text-gray-900 mb-2">L∆∞u √Ω:</h4>
              <ul className="text-sm text-gray-600 space-y-1 list-disc list-inside">
                <li>Nh√¢n vi√™n ph·∫£i ƒë√£ t·ªìn t·∫°i trong h·ªá th·ªëng</li>
                <li>S·ªë ti·ªÅn ph·∫£i l√† s·ªë d∆∞∆°ng</li>
                <li>D·ªØ li·ªáu s·∫Ω ghi ƒë√® l√™n th√¥ng tin l∆∞∆°ng hi·ªán t·∫°i</li>
                <li>H·ªá th·ªëng s·∫Ω t·ª± ƒë·ªông t√≠nh to√°n th·ª±c lƒ©nh</li>
              </ul>
            </div>

            <div className="bg-blue-50 p-3 rounded-md">
              <p className="text-sm text-blue-800">
                üí° <strong>M·∫πo:</strong> H√£y t·∫£i file m·∫´u ·ªü tr√™n ƒë·ªÉ c√≥ ƒë√∫ng ƒë·ªãnh d·∫°ng v√† d·ªØ li·ªáu m·∫´u.
                File m·∫´u ch·ª©a d·ªØ li·ªáu nh√¢n vi√™n th·ª±c t·∫ø t·ª´ h·ªá th·ªëng v√† c√≥ th·ªÉ import th√†nh c√¥ng ngay l·∫≠p t·ª©c.
              </p>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
}
